GAS LISTING /tmp/ccHEKJtt.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB37:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../h/syscall_c.h"
   4:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   5:src/main.cpp  **** #include "../h/console.hpp"
   6:src/main.cpp  **** 
   7:src/main.cpp  **** /*class IzvedenaPeriodicna: public PeriodicThread{
   8:src/main.cpp  **** public:
   9:src/main.cpp  ****     IzvedenaPeriodicna(time_t period) : PeriodicThread(period) {}
  10:src/main.cpp  ****     void periodicActivation () override{
  11:src/main.cpp  ****         putc('a');
  12:src/main.cpp  ****         putc('\n');
  13:src/main.cpp  ****     }
  14:src/main.cpp  **** };*/
  15:src/main.cpp  **** 
  16:src/main.cpp  **** void consolePutc(void*);
  17:src/main.cpp  **** void userMain();
  18:src/main.cpp  **** int main(){
  12              		.loc 1 18 11
  13              		.cfi_startproc
  14 0000 130101FD 		addi	sp,sp,-48
  15              		.cfi_def_cfa_offset 48
  16 0004 23341102 		sd	ra,40(sp)
  17 0008 23308102 		sd	s0,32(sp)
  18 000c 233C9100 		sd	s1,24(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040103 		addi	s0,sp,48
  23              		.cfi_def_cfa 8, 0
  19:src/main.cpp  ****     //omoguci prekide u vektorskom rezimu
  20:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap | 1);
  24              		.loc 1 20 5
  25              		.loc 1 20 19 is_stmt 0
  26 0014 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  26      83B70700 
  27 001c 93E71700 		ori	a5,a5,1
  28              	.LVL0:
  29              	.LBB10:
  30              	.LBB11:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   2:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   6:src/../h/riscv.hpp **** #include "../h/tcb.hpp"
GAS LISTING /tmp/ccHEKJtt.s 			page 2


   7:src/../h/riscv.hpp **** #include "../h/semaphore.hpp"
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** //Klasa preuzeta sa sedmih vezbi. Dodate su nove metode za citanje registara a0, a1, a2, a3.
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class Riscv
  12:src/../h/riscv.hpp **** {
  13:src/../h/riscv.hpp **** public:
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/riscv.hpp ****     static void popSppSpie();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // read register scause
  19:src/../h/riscv.hpp ****     static uint64 r_scause();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // write register scause
  22:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register sepc
  25:src/../h/riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register sepc
  28:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register stvec
  31:src/../h/riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register stvec
  34:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register stval
  37:src/../h/riscv.hpp ****     static uint64 r_stval();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register stval
  40:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     enum BitMaskSip
  43:src/../h/riscv.hpp ****     {
  44:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/riscv.hpp ****     };
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // mask set register sip
  50:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // mask clear register sip
  53:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     // read register sip
  56:src/../h/riscv.hpp ****     static uint64 r_sip();
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // write register sip
  59:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/riscv.hpp ****     {
  63:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/ccHEKJtt.s 			page 3


  64:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/riscv.hpp ****     };
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // mask set register sstatus
  69:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // mask clear register sstatus
  72:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // read register sstatus
  75:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // write register sstatus
  78:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // read register a0
  81:src/../h/riscv.hpp ****     static uint64  r_a0();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // read register a1
  84:src/../h/riscv.hpp ****     static uint64  r_a1();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register a2
  87:src/../h/riscv.hpp ****     static uint64  r_a2();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // read register a3
  90:src/../h/riscv.hpp ****     static uint64  r_a3();
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // read register a4
  93:src/../h/riscv.hpp ****     static uint64  r_a4();
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // supervisor trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     enum BitMaskSie{
  99:src/../h/riscv.hpp ****         SIE_SSIE = (1 << 1),
 100:src/../h/riscv.hpp ****         SIE_SEIE = (1 << 9)
 101:src/../h/riscv.hpp ****     };
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** private:
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp ****     // supervisor trap handler
 108:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void handleInterrupt();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static void handleTimer();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void handleConsole();
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void wakeupThread();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** };
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
GAS LISTING /tmp/ccHEKJtt.s 			page 4


 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     uint64 volatile scause;
 123:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 124:src/../h/riscv.hpp ****     return scause;
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     uint64 volatile sepc;
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 136:src/../h/riscv.hpp ****     return sepc;
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     uint64 volatile stvec;
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 148:src/../h/riscv.hpp ****     return stvec;
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  32              		.loc 2 153 5 is_stmt 1
  33              		.loc 2 153 69 is_stmt 0
  34              	#APP
  35              	# 153 "src/../h/riscv.hpp" 1
 154              	}
  36              		csrw stvec, a5
  37              	# 0 "" 2
  38              	.LVL1:
  39              	#NO_APP
  40              	.LBE11:
  41              	.LBE10:
  21:src/main.cpp  ****     //omoguci spoljasnje hardverske prekide
  22:src/main.cpp  ****     Riscv::ms_sie(Riscv::SIE_SEIE);
  42              		.loc 1 22 5 is_stmt 1
  43              	.LBB12:
  44              	.LBB13:
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     uint64 volatile stval;
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 160:src/../h/riscv.hpp ****     return stval;
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccHEKJtt.s 			page 5


 163:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 176:src/../h/riscv.hpp **** }
 177:src/../h/riscv.hpp **** 
 178:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 179:src/../h/riscv.hpp **** {
 180:src/../h/riscv.hpp ****     uint64 volatile sip;
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 182:src/../h/riscv.hpp ****     return sip;
 183:src/../h/riscv.hpp **** }
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 188:src/../h/riscv.hpp **** }
 189:src/../h/riscv.hpp **** 
 190:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 191:src/../h/riscv.hpp **** {
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 193:src/../h/riscv.hpp **** }
 194:src/../h/riscv.hpp **** 
 195:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 196:src/../h/riscv.hpp **** {
 197:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 198:src/../h/riscv.hpp **** }
 199:src/../h/riscv.hpp **** 
 200:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 201:src/../h/riscv.hpp **** {
 202:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 203:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 204:src/../h/riscv.hpp ****     return sstatus;
 205:src/../h/riscv.hpp **** }
 206:src/../h/riscv.hpp **** 
 207:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 208:src/../h/riscv.hpp **** {
 209:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 210:src/../h/riscv.hpp **** }
 211:src/../h/riscv.hpp **** 
 212:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 213:src/../h/riscv.hpp **** {
 214:src/../h/riscv.hpp ****     uint64 volatile a0;
 215:src/../h/riscv.hpp ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
 216:src/../h/riscv.hpp ****     return a0;
 217:src/../h/riscv.hpp **** }
 218:src/../h/riscv.hpp **** 
 219:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1()
GAS LISTING /tmp/ccHEKJtt.s 			page 6


 220:src/../h/riscv.hpp **** {
 221:src/../h/riscv.hpp ****     uint64 volatile a1;
 222:src/../h/riscv.hpp ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
 223:src/../h/riscv.hpp ****     return a1;
 224:src/../h/riscv.hpp **** }
 225:src/../h/riscv.hpp **** 
 226:src/../h/riscv.hpp **** inline uint64 Riscv::r_a2()
 227:src/../h/riscv.hpp **** {
 228:src/../h/riscv.hpp ****     uint64 volatile a2;
 229:src/../h/riscv.hpp ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
 230:src/../h/riscv.hpp ****     return a2;
 231:src/../h/riscv.hpp **** }
 232:src/../h/riscv.hpp **** 
 233:src/../h/riscv.hpp **** inline uint64 Riscv::r_a3()
 234:src/../h/riscv.hpp **** {
 235:src/../h/riscv.hpp ****     uint64 volatile a3;
 236:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 104(s0)" : "=r"(a3));
 237:src/../h/riscv.hpp ****     return a3;
 238:src/../h/riscv.hpp **** }
 239:src/../h/riscv.hpp **** 
 240:src/../h/riscv.hpp **** inline uint64 Riscv::r_a4()
 241:src/../h/riscv.hpp **** {
 242:src/../h/riscv.hpp ****     uint64 volatile a4;
 243:src/../h/riscv.hpp ****     __asm__ volatile ("mv %[a4], a4" : [a4] "=r"(a4));
 244:src/../h/riscv.hpp ****     return a4;
 245:src/../h/riscv.hpp **** }
 246:src/../h/riscv.hpp **** 
 247:src/../h/riscv.hpp **** inline void Riscv::ms_sie(uint64 mask) {
 248:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sie, %[mask]" : : [mask]"r"(mask));
  45              		.loc 2 248 5
  46              		.loc 2 248 63 is_stmt 0
  47 0024 93070020 		li	a5,512
  48              	#APP
  49              	# 248 "src/../h/riscv.hpp" 1
 249              	}
  50              		csrs sie, a5
  51              	# 0 "" 2
  52              	.LVL2:
  53              	#NO_APP
  54              	.LBE13:
  55              	.LBE12:
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     //main nit
  25:src/main.cpp  ****     TCB* t;
  56              		.loc 1 25 5 is_stmt 1
  26:src/main.cpp  ****     thread_create(&t, nullptr, nullptr);
  57              		.loc 1 26 5
  58              		.loc 1 26 18 is_stmt 0
  59 002c 13060000 		li	a2,0
  60 0030 93050000 		li	a1,0
  61 0034 130584FD 		addi	a0,s0,-40
  62 0038 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  62      E7800000 
  63              	.LVL3:
  27:src/main.cpp  ****     TCB::running = t;
  64              		.loc 1 27 5 is_stmt 1
  65              		.loc 1 27 18 is_stmt 0
GAS LISTING /tmp/ccHEKJtt.s 			page 7


  66 0040 97070000 		la	a5,_ZN3TCB7runningE
  66      83B70700 
  67 0048 033784FD 		ld	a4,-40(s0)
  68 004c 23B0E700 		sd	a4,0(a5)
  28:src/main.cpp  **** 
  29:src/main.cpp  ****     //idle nit
  30:src/main.cpp  ****     Scheduler::idle = TCB::createThread(Scheduler::idleBody, nullptr,(char*) MemoryAllocator::insta
  69              		.loc 1 30 5 is_stmt 1
  70              		.loc 1 30 104 is_stmt 0
  71 0050 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
  71      E7800000 
  72              	.LVL4:
  73              		.loc 1 30 115
  74 0058 93050020 		li	a1,512
  75 005c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
  75      E7800000 
  76              	.LVL5:
  77 0064 13060500 		mv	a2,a0
  78              		.loc 1 30 40
  79 0068 93050000 		li	a1,0
  80 006c 17050000 		la	a0,_ZN9Scheduler8idleBodyEPv
  80      03350500 
  81 0074 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pc@plt
  81      E7800000 
  82              	.LVL6:
  83              		.loc 1 30 21
  84 007c 97040000 		la	s1,_ZN9Scheduler4idleE
  84      83B40400 
  85 0084 23B0A400 		sd	a0,0(s1)
  31:src/main.cpp  ****                                                 (8*DEFAULT_STACK_SIZE + MEM_BLOCK_SIZE - 1) / MEM_B
  32:src/main.cpp  ****     Scheduler::instanceOfScheduler().put(Scheduler::idle);
  86              		.loc 1 32 5 is_stmt 1
  87              		.loc 1 32 36 is_stmt 0
  88 0088 97000000 		call	_ZN9Scheduler19instanceOfSchedulerEv@plt
  88      E7800000 
  89              	.LVL7:
  90              		.loc 1 32 41
  91 0090 83B50400 		ld	a1,0(s1)
  92 0094 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
  92      E7800000 
  93              	.LVL8:
  33:src/main.cpp  **** 
  34:src/main.cpp  ****     //console
  35:src/main.cpp  ****     TCB* c = TCB::createThread(consolePutc, nullptr, (char*) MemoryAllocator::instance().mem_alloc(
  94              		.loc 1 35 5 is_stmt 1
  95              		.loc 1 35 88 is_stmt 0
  96 009c 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
  96      E7800000 
  97              	.LVL9:
  98              		.loc 1 35 99
  99 00a4 93050020 		li	a1,512
 100 00a8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 100      E7800000 
 101              	.LVL10:
 102 00b0 13060500 		mv	a2,a0
 103              		.loc 1 35 31
 104 00b4 93050000 		li	a1,0
GAS LISTING /tmp/ccHEKJtt.s 			page 8


 105 00b8 17050000 		la	a0,_Z11consolePutcPv
 105      03350500 
 106 00c0 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pc@plt
 106      E7800000 
 107              	.LVL11:
 108 00c8 93040500 		mv	s1,a0
 109              	.LVL12:
  36:src/main.cpp  ****             (8*DEFAULT_STACK_SIZE + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE));
  37:src/main.cpp  ****     Scheduler::instanceOfScheduler().put(c);
 110              		.loc 1 37 5 is_stmt 1
 111              		.loc 1 37 36 is_stmt 0
 112 00cc 97000000 		call	_ZN9Scheduler19instanceOfSchedulerEv@plt
 112      E7800000 
 113              	.LVL13:
 114              		.loc 1 37 41
 115 00d4 93850400 		mv	a1,s1
 116 00d8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 116      E7800000 
 117              	.LVL14:
  38:src/main.cpp  ****     console::init();
 118              		.loc 1 38 5 is_stmt 1
 119              		.loc 1 38 18 is_stmt 0
 120 00e0 97000000 		call	_ZN7console4initEv@plt
 120      E7800000 
 121              	.LVL15:
  39:src/main.cpp  **** 
  40:src/main.cpp  ****     //omoguci prekid od tajmera
  41:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 122              		.loc 1 41 5 is_stmt 1
 123              	.LBB14:
 124              	.LBB15:
 192:src/../h/riscv.hpp **** }
 125              		.loc 2 192 5
 192:src/../h/riscv.hpp **** }
 126              		.loc 2 192 68 is_stmt 0
 127 00e8 93072000 		li	a5,2
 128              	#APP
 129              	# 192 "src/../h/riscv.hpp" 1
 130              		csrs sstatus, a5
 131              	# 0 "" 2
 132              	.LVL16:
 133              	#NO_APP
 134              	.LBE15:
 135              	.LBE14:
  42:src/main.cpp  **** 
  43:src/main.cpp  ****     changeToUser();
 136              		.loc 1 43 5 is_stmt 1
 137              		.loc 1 43 17 is_stmt 0
 138 00f0 97000000 		call	_Z12changeToUserv@plt
 138      E7800000 
 139              	.LVL17:
  44:src/main.cpp  **** 
  45:src/main.cpp  ****     TCB* mainThread ;
 140              		.loc 1 45 5 is_stmt 1
  46:src/main.cpp  ****     thread_create(&mainThread, reinterpret_cast<void (*)(void *)>(userMain), nullptr);
 141              		.loc 1 46 5
 142              		.loc 1 46 18 is_stmt 0
GAS LISTING /tmp/ccHEKJtt.s 			page 9


 143 00f8 13060000 		li	a2,0
 144 00fc 97050000 		la	a1,_Z8userMainv
 144      83B50500 
 145 0104 130504FD 		addi	a0,s0,-48
 146 0108 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 146      E7800000 
 147              	.LVL18:
 148              	.L3:
  47:src/main.cpp  ****     while(!mainThread->isFinished()){
 149              		.loc 1 47 5 is_stmt 1
 150              		.loc 1 47 11
 151              		.loc 1 47 34 is_stmt 0
 152 0110 833704FD 		ld	a5,-48(s0)
 153              	.LVL19:
 154              	.LBB16:
 155              	.LBB17:
 156              		.file 3 "src/../h/../h/tcb.hpp"
   1:src/../h/../h/tcb.hpp **** #ifndef OS_PROJEKAT_TCB_HPP
   2:src/../h/../h/tcb.hpp **** #define OS_PROJEKAT_TCB_HPP
   3:src/../h/../h/tcb.hpp **** 
   4:src/../h/../h/tcb.hpp **** #include "../h/MemoryAllocator.hpp"
   5:src/../h/../h/tcb.hpp **** #include "../h/Scheduler.hpp"
   6:src/../h/../h/tcb.hpp **** #include "../h/riscv.hpp"
   7:src/../h/../h/tcb.hpp **** 
   8:src/../h/../h/tcb.hpp **** //Klasa implementirana na osnovu klase TCB sa vezbi.
   9:src/../h/../h/tcb.hpp **** 
  10:src/../h/../h/tcb.hpp **** struct Suspend{
  11:src/../h/../h/tcb.hpp ****     TCB* tcb;
  12:src/../h/../h/tcb.hpp ****     Suspend* next;
  13:src/../h/../h/tcb.hpp ****     Suspend(TCB* tcb, Suspend* next): tcb(tcb), next(next){};
  14:src/../h/../h/tcb.hpp **** };
  15:src/../h/../h/tcb.hpp **** 
  16:src/../h/../h/tcb.hpp **** typedef unsigned long time_t;
  17:src/../h/../h/tcb.hpp **** struct Sleep{
  18:src/../h/../h/tcb.hpp ****     TCB* thread;
  19:src/../h/../h/tcb.hpp ****     unsigned long sleepTime;
  20:src/../h/../h/tcb.hpp ****     struct Sleep* next;
  21:src/../h/../h/tcb.hpp **** };
  22:src/../h/../h/tcb.hpp **** 
  23:src/../h/../h/tcb.hpp **** class TCB{
  24:src/../h/../h/tcb.hpp **** public:
  25:src/../h/../h/tcb.hpp ****     static TCB* running;
  26:src/../h/../h/tcb.hpp ****     static Sleep* sleepHead;
  27:src/../h/../h/tcb.hpp **** 
  28:src/../h/../h/tcb.hpp ****     typedef void(*Body)(void*);
  29:src/../h/../h/tcb.hpp ****     static TCB *createThread(Body body, void* arg, char* stack_space);
  30:src/../h/../h/tcb.hpp ****     static int exit();
  31:src/../h/../h/tcb.hpp ****     void join(TCB* handle);
  32:src/../h/../h/tcb.hpp ****     static void yield();
  33:src/../h/../h/tcb.hpp ****     static void dispatch();
  34:src/../h/../h/tcb.hpp ****     static void sleep(time_t timeToSleep);
  35:src/../h/../h/tcb.hpp **** 
  36:src/../h/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 157              		.loc 3 36 31 is_stmt 1
 158              		.loc 3 36 38 is_stmt 0
 159 0114 83C78702 		lbu	a5,40(a5)
 160              	.LVL20:
GAS LISTING /tmp/ccHEKJtt.s 			page 10


 161              	.LBE17:
 162              	.LBE16:
 163              		.loc 1 47 11
 164 0118 63980700 		bnez	a5,.L2
  48:src/main.cpp  ****         thread_dispatch();
 165              		.loc 1 48 9 is_stmt 1
 166              		.loc 1 48 24 is_stmt 0
 167 011c 97000000 		call	_Z15thread_dispatchv@plt
 167      E7800000 
 168              	.LVL21:
 169 0124 6FF0DFFE 		j	.L3
 170              	.L2:
  49:src/main.cpp  ****     }
  50:src/main.cpp  ****     thread_dispatch();
 171              		.loc 1 50 5 is_stmt 1
 172              		.loc 1 50 20 is_stmt 0
 173 0128 97000000 		call	_Z15thread_dispatchv@plt
 173      E7800000 
 174              	.LVL22:
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     return 0;
 175              		.loc 1 52 5 is_stmt 1
  53:src/main.cpp  **** }...
 176              		.loc 1 53 1 is_stmt 0
 177 0130 13050000 		li	a0,0
 178 0134 83308102 		ld	ra,40(sp)
 179              		.cfi_restore 1
 180 0138 03340102 		ld	s0,32(sp)
 181              		.cfi_restore 8
 182              		.cfi_def_cfa 2, 48
 183 013c 83348101 		ld	s1,24(sp)
 184              		.cfi_restore 9
 185              	.LVL23:
 186 0140 13010103 		addi	sp,sp,48
 187              		.cfi_def_cfa_offset 0
 188 0144 67800000 		jr	ra
 189              		.cfi_endproc
 190              	.LFE37:
 192              	.Letext0:
 193              		.file 4 "src/../h/../lib/hw.h"
 194              		.file 5 "src/../h/MemoryAllocator.hpp"
 195              		.file 6 "src/../h/../h/../h/Scheduler.hpp"
 196              		.file 7 "src/../h/../h/semaphore.hpp"
 197              		.file 8 "src/../h/../h/buffer.h"
 198              		.file 9 "src/../h/console.hpp"
 199              		.file 10 "src/../h/../h/../h/syscall_c.h"
GAS LISTING /tmp/ccHEKJtt.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccHEKJtt.s:9      .text:0000000000000000 main
     /tmp/ccHEKJtt.s:13     .text:0000000000000000 .L0 
     /tmp/ccHEKJtt.s:14     .text:0000000000000000 .L0 
     /tmp/ccHEKJtt.s:15     .text:0000000000000004 .L0 
     /tmp/ccHEKJtt.s:19     .text:0000000000000010 .L0 
     /tmp/ccHEKJtt.s:20     .text:0000000000000010 .L0 
     /tmp/ccHEKJtt.s:21     .text:0000000000000010 .L0 
     /tmp/ccHEKJtt.s:23     .text:0000000000000014 .L0 
     /tmp/ccHEKJtt.s:25     .text:0000000000000014 .L0 
     /tmp/ccHEKJtt.s:26     .text:0000000000000014 .L0 
     /tmp/ccHEKJtt.s:33     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:153    .text:0000000000000020 .L0 
     /tmp/ccHEKJtt.s:45     .text:0000000000000024 .L0 
     /tmp/ccHEKJtt.s:46     .text:0000000000000024 .L0 
     /tmp/ccHEKJtt.s:47     .text:0000000000000024 .L0 
     /tmp/ccHEKJtt.s:57     .text:000000000000002c .L0 
     /tmp/ccHEKJtt.s:58     .text:000000000000002c .L0 
     /tmp/ccHEKJtt.s:59     .text:000000000000002c .L0 
     /tmp/ccHEKJtt.s:65     .text:0000000000000040 .L0 
     /tmp/ccHEKJtt.s:66     .text:0000000000000040 .L0 
     /tmp/ccHEKJtt.s:70     .text:0000000000000050 .L0 
     /tmp/ccHEKJtt.s:71     .text:0000000000000050 .L0 
     /tmp/ccHEKJtt.s:74     .text:0000000000000058 .L0 
     /tmp/ccHEKJtt.s:79     .text:0000000000000068 .L0 
     /tmp/ccHEKJtt.s:84     .text:000000000000007c .L0 
     /tmp/ccHEKJtt.s:87     .text:0000000000000088 .L0 
     /tmp/ccHEKJtt.s:88     .text:0000000000000088 .L0 
     /tmp/ccHEKJtt.s:91     .text:0000000000000090 .L0 
     /tmp/ccHEKJtt.s:95     .text:000000000000009c .L0 
     /tmp/ccHEKJtt.s:96     .text:000000000000009c .L0 
     /tmp/ccHEKJtt.s:99     .text:00000000000000a4 .L0 
     /tmp/ccHEKJtt.s:104    .text:00000000000000b4 .L0 
     /tmp/ccHEKJtt.s:111    .text:00000000000000cc .L0 
     /tmp/ccHEKJtt.s:112    .text:00000000000000cc .L0 
     /tmp/ccHEKJtt.s:115    .text:00000000000000d4 .L0 
     /tmp/ccHEKJtt.s:119    .text:00000000000000e0 .L0 
     /tmp/ccHEKJtt.s:120    .text:00000000000000e0 .L0 
     /tmp/ccHEKJtt.s:125    .text:00000000000000e8 .L0 
     /tmp/ccHEKJtt.s:126    .text:00000000000000e8 .L0 
     /tmp/ccHEKJtt.s:127    .text:00000000000000e8 .L0 
     /tmp/ccHEKJtt.s:137    .text:00000000000000f0 .L0 
     /tmp/ccHEKJtt.s:138    .text:00000000000000f0 .L0 
     /tmp/ccHEKJtt.s:141    .text:00000000000000f8 .L0 
     /tmp/ccHEKJtt.s:142    .text:00000000000000f8 .L0 
     /tmp/ccHEKJtt.s:143    .text:00000000000000f8 .L0 
     /tmp/ccHEKJtt.s:150    .text:0000000000000110 .L0 
     /tmp/ccHEKJtt.s:151    .text:0000000000000110 .L0 
     /tmp/ccHEKJtt.s:152    .text:0000000000000110 .L0 
     /tmp/ccHEKJtt.s:158    .text:0000000000000114 .L0 
     /tmp/ccHEKJtt.s:159    .text:0000000000000114 .L0 
     /tmp/ccHEKJtt.s:164    .text:0000000000000118 .L0 
     /tmp/ccHEKJtt.s:166    .text:000000000000011c .L0 
     /tmp/ccHEKJtt.s:167    .text:000000000000011c .L0 
     /tmp/ccHEKJtt.s:172    .text:0000000000000128 .L0 
     /tmp/ccHEKJtt.s:173    .text:0000000000000128 .L0 
GAS LISTING /tmp/ccHEKJtt.s 			page 12


     /tmp/ccHEKJtt.s:176    .text:0000000000000130 .L0 
     /tmp/ccHEKJtt.s:177    .text:0000000000000130 .L0 
     /tmp/ccHEKJtt.s:179    .text:0000000000000138 .L0 
     /tmp/ccHEKJtt.s:181    .text:000000000000013c .L0 
     /tmp/ccHEKJtt.s:182    .text:000000000000013c .L0 
     /tmp/ccHEKJtt.s:184    .text:0000000000000140 .L0 
     /tmp/ccHEKJtt.s:187    .text:0000000000000144 .L0 
     /tmp/ccHEKJtt.s:189    .text:0000000000000148 .L0 
     /tmp/ccHEKJtt.s:200    .text:0000000000000148 .L0 
     /tmp/ccHEKJtt.s:26     .text:0000000000000014 .L0 
     /tmp/ccHEKJtt.s:66     .text:0000000000000040 .L0 
     /tmp/ccHEKJtt.s:80     .text:000000000000006c .L0 
     /tmp/ccHEKJtt.s:84     .text:000000000000007c .L0 
     /tmp/ccHEKJtt.s:105    .text:00000000000000b8 .L0 
     /tmp/ccHEKJtt.s:144    .text:00000000000000fc .L0 
     /tmp/ccHEKJtt.s:170    .text:0000000000000128 .L2
     /tmp/ccHEKJtt.s:148    .text:0000000000000110 .L3
     /tmp/ccHEKJtt.s:1834   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHEKJtt.s:3159   .debug_str:00000000000009a9 .LASF201
     /tmp/ccHEKJtt.s:2919   .debug_str:00000000000002e0 .LASF202
     /tmp/ccHEKJtt.s:2997   .debug_str:0000000000000581 .LASF203
     /tmp/ccHEKJtt.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccHEKJtt.s:192    .text:0000000000000148 .Letext0
     /tmp/ccHEKJtt.s:2821   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHEKJtt.s:2955   .debug_str:0000000000000407 .LASF0
     /tmp/ccHEKJtt.s:2987   .debug_str:0000000000000538 .LASF1
     /tmp/ccHEKJtt.s:3091   .debug_str:000000000000080d .LASF2
     /tmp/ccHEKJtt.s:3099   .debug_str:000000000000084d .LASF4
     /tmp/ccHEKJtt.s:2969   .debug_str:000000000000047b .LASF3
     /tmp/ccHEKJtt.s:2829   .debug_str:0000000000000037 .LASF5
     /tmp/ccHEKJtt.s:3069   .debug_str:0000000000000786 .LASF6
     /tmp/ccHEKJtt.s:3063   .debug_str:0000000000000755 .LASF7
     /tmp/ccHEKJtt.s:2979   .debug_str:00000000000004eb .LASF8
     /tmp/ccHEKJtt.s:2931   .debug_str:0000000000000318 .LASF9
     /tmp/ccHEKJtt.s:2943   .debug_str:0000000000000392 .LASF10
     /tmp/ccHEKJtt.s:2869   .debug_str:0000000000000182 .LASF11
     /tmp/ccHEKJtt.s:2915   .debug_str:00000000000002c7 .LASF12
     /tmp/ccHEKJtt.s:2887   .debug_str:00000000000001ef .LASF13
     /tmp/ccHEKJtt.s:2867   .debug_str:0000000000000172 .LASF14
     /tmp/ccHEKJtt.s:3135   .debug_str:0000000000000938 .LASF15
     /tmp/ccHEKJtt.s:2907   .debug_str:000000000000026d .LASF16
     /tmp/ccHEKJtt.s:3121   .debug_str:00000000000008cf .LASF17
     /tmp/ccHEKJtt.s:3153   .debug_str:000000000000098c .LASF28
     /tmp/ccHEKJtt.s:2845   .debug_str:00000000000000ba .LASF18
     /tmp/ccHEKJtt.s:2871   .debug_str:0000000000000191 .LASF19
     /tmp/ccHEKJtt.s:2985   .debug_str:0000000000000533 .LASF20
     /tmp/ccHEKJtt.s:3055   .debug_str:000000000000071a .LASF23
     /tmp/ccHEKJtt.s:3125   .debug_str:00000000000008f9 .LASF21
     /tmp/ccHEKJtt.s:2965   .debug_str:000000000000045d .LASF22
     /tmp/ccHEKJtt.s:2975   .debug_str:00000000000004a8 .LASF24
     /tmp/ccHEKJtt.s:2841   .debug_str:000000000000009b .LASF25
     /tmp/ccHEKJtt.s:2883   .debug_str:00000000000001d7 .LASF36
     /tmp/ccHEKJtt.s:3197   .debug_str:0000000000000b6d .LASF38
     /tmp/ccHEKJtt.s:3015   .debug_str:0000000000000615 .LASF46
     /tmp/ccHEKJtt.s:2833   .debug_str:0000000000000049 .LASF48
     /tmp/ccHEKJtt.s:3141   .debug_str:0000000000000952 .LASF26
     /tmp/ccHEKJtt.s:3017   .debug_str:000000000000061f .LASF27
GAS LISTING /tmp/ccHEKJtt.s 			page 13


     /tmp/ccHEKJtt.s:3185   .debug_str:0000000000000b31 .LASF29
     /tmp/ccHEKJtt.s:3085   .debug_str:00000000000007f2 .LASF30
     /tmp/ccHEKJtt.s:2877   .debug_str:00000000000001b3 .LASF31
     /tmp/ccHEKJtt.s:3155   .debug_str:0000000000000994 .LASF32
     /tmp/ccHEKJtt.s:2939   .debug_str:000000000000036c .LASF33
     /tmp/ccHEKJtt.s:3133   .debug_str:000000000000092b .LASF34
     /tmp/ccHEKJtt.s:3203   .debug_str:0000000000000b9d .LASF35
     /tmp/ccHEKJtt.s:3051   .debug_str:0000000000000704 .LASF204
     /tmp/ccHEKJtt.s:3115   .debug_str:00000000000008ba .LASF37
     /tmp/ccHEKJtt.s:3057   .debug_str:000000000000072a .LASF39
     /tmp/ccHEKJtt.s:3151   .debug_str:0000000000000987 .LASF40
     /tmp/ccHEKJtt.s:2921   .debug_str:00000000000002ed .LASF41
     /tmp/ccHEKJtt.s:2991   .debug_str:0000000000000555 .LASF42
     /tmp/ccHEKJtt.s:3161   .debug_str:0000000000000a6d .LASF44
     /tmp/ccHEKJtt.s:2897   .debug_str:0000000000000230 .LASF43
     /tmp/ccHEKJtt.s:2879   .debug_str:00000000000001bb .LASF45
     /tmp/ccHEKJtt.s:2843   .debug_str:00000000000000b4 .LASF69
     /tmp/ccHEKJtt.s:3097   .debug_str:000000000000083d .LASF71
     /tmp/ccHEKJtt.s:3143   .debug_str:000000000000095b .LASF47
     /tmp/ccHEKJtt.s:3027   .debug_str:0000000000000677 .LASF49
     /tmp/ccHEKJtt.s:2853   .debug_str:00000000000000f5 .LASF50
     /tmp/ccHEKJtt.s:3179   .debug_str:0000000000000b02 .LASF51
     /tmp/ccHEKJtt.s:3093   .debug_str:000000000000081b .LASF52
     /tmp/ccHEKJtt.s:2863   .debug_str:000000000000014c .LASF53
     /tmp/ccHEKJtt.s:3147   .debug_str:0000000000000977 .LASF54
     /tmp/ccHEKJtt.s:2913   .debug_str:00000000000002b1 .LASF55
     /tmp/ccHEKJtt.s:2993   .debug_str:000000000000055b .LASF56
     /tmp/ccHEKJtt.s:3077   .debug_str:00000000000007b2 .LASF57
     /tmp/ccHEKJtt.s:2823   .debug_str:0000000000000000 .LASF58
     /tmp/ccHEKJtt.s:3019   .debug_str:0000000000000640 .LASF59
     /tmp/ccHEKJtt.s:3139   .debug_str:000000000000094b .LASF60
     /tmp/ccHEKJtt.s:3119   .debug_str:00000000000008c6 .LASF61
     /tmp/ccHEKJtt.s:3043   .debug_str:00000000000006c1 .LASF62
     /tmp/ccHEKJtt.s:3001   .debug_str:00000000000005a2 .LASF63
     /tmp/ccHEKJtt.s:3163   .debug_str:0000000000000a7d .LASF64
     /tmp/ccHEKJtt.s:3109   .debug_str:0000000000000895 .LASF67
     /tmp/ccHEKJtt.s:2859   .debug_str:000000000000012d .LASF154
     /tmp/ccHEKJtt.s:2995   .debug_str:0000000000000568 .LASF156
     /tmp/ccHEKJtt.s:2891   .debug_str:0000000000000204 .LASF205
     /tmp/ccHEKJtt.s:2825   .debug_str:0000000000000005 .LASF206
     /tmp/ccHEKJtt.s:2929   .debug_str:000000000000030e .LASF65
     /tmp/ccHEKJtt.s:3031   .debug_str:0000000000000696 .LASF66
     /tmp/ccHEKJtt.s:3217   .debug_str:0000000000000bf9 .LASF68
     /tmp/ccHEKJtt.s:2905   .debug_str:0000000000000264 .LASF70
     /tmp/ccHEKJtt.s:3235   .debug_str:0000000000000c8d .LASF72
     /tmp/ccHEKJtt.s:2847   .debug_str:00000000000000bf .LASF73
     /tmp/ccHEKJtt.s:2957   .debug_str:0000000000000414 .LASF74
     /tmp/ccHEKJtt.s:2949   .debug_str:00000000000003c5 .LASF75
     /tmp/ccHEKJtt.s:3225   .debug_str:0000000000000c35 .LASF76
     /tmp/ccHEKJtt.s:3187   .debug_str:0000000000000b36 .LASF77
     /tmp/ccHEKJtt.s:3101   .debug_str:0000000000000854 .LASF207
     /tmp/ccHEKJtt.s:3231   .debug_str:0000000000000c75 .LASF78
     /tmp/ccHEKJtt.s:3173   .debug_str:0000000000000ada .LASF79
     /tmp/ccHEKJtt.s:3149   .debug_str:0000000000000982 .LASF80
     /tmp/ccHEKJtt.s:3005   .debug_str:00000000000005c1 .LASF81
     /tmp/ccHEKJtt.s:2917   .debug_str:00000000000002d6 .LASF82
     /tmp/ccHEKJtt.s:3195   .debug_str:0000000000000b66 .LASF83
GAS LISTING /tmp/ccHEKJtt.s 			page 14


     /tmp/ccHEKJtt.s:3127   .debug_str:00000000000008fe .LASF84
     /tmp/ccHEKJtt.s:2873   .debug_str:0000000000000196 .LASF85
     /tmp/ccHEKJtt.s:2977   .debug_str:00000000000004d1 .LASF86
     /tmp/ccHEKJtt.s:2959   .debug_str:0000000000000439 .LASF87
     /tmp/ccHEKJtt.s:3169   .debug_str:0000000000000aaf .LASF88
     /tmp/ccHEKJtt.s:3035   .debug_str:00000000000006a2 .LASF89
     /tmp/ccHEKJtt.s:3165   .debug_str:0000000000000a87 .LASF90
     /tmp/ccHEKJtt.s:2839   .debug_str:0000000000000095 .LASF91
     /tmp/ccHEKJtt.s:2835   .debug_str:000000000000006a .LASF92
     /tmp/ccHEKJtt.s:2899   .debug_str:0000000000000239 .LASF93
     /tmp/ccHEKJtt.s:3209   .debug_str:0000000000000bd5 .LASF94
     /tmp/ccHEKJtt.s:3137   .debug_str:0000000000000944 .LASF95
     /tmp/ccHEKJtt.s:2935   .debug_str:0000000000000343 .LASF96
     /tmp/ccHEKJtt.s:3009   .debug_str:00000000000005e9 .LASF97
     /tmp/ccHEKJtt.s:3201   .debug_str:0000000000000b97 .LASF98
     /tmp/ccHEKJtt.s:3189   .debug_str:0000000000000b3e .LASF102
     /tmp/ccHEKJtt.s:2911   .debug_str:00000000000002a5 .LASF99
     /tmp/ccHEKJtt.s:3157   .debug_str:000000000000099c .LASF100
     /tmp/ccHEKJtt.s:2893   .debug_str:0000000000000212 .LASF101
     /tmp/ccHEKJtt.s:3071   .debug_str:000000000000078d .LASF103
     /tmp/ccHEKJtt.s:3065   .debug_str:0000000000000768 .LASF104
     /tmp/ccHEKJtt.s:2881   .debug_str:00000000000001ce .LASF105
     /tmp/ccHEKJtt.s:2947   .debug_str:00000000000003ba .LASF106
     /tmp/ccHEKJtt.s:2953   .debug_str:00000000000003ef .LASF107
     /tmp/ccHEKJtt.s:3183   .debug_str:0000000000000b28 .LASF108
     /tmp/ccHEKJtt.s:3177   .debug_str:0000000000000aed .LASF109
     /tmp/ccHEKJtt.s:3087   .debug_str:00000000000007f9 .LASF110
     /tmp/ccHEKJtt.s:3045   .debug_str:00000000000006c9 .LASF111
     /tmp/ccHEKJtt.s:3073   .debug_str:0000000000000798 .LASF112
     /tmp/ccHEKJtt.s:3075   .debug_str:000000000000079f .LASF113
     /tmp/ccHEKJtt.s:3033   .debug_str:000000000000069b .LASF114
     /tmp/ccHEKJtt.s:2983   .debug_str:0000000000000520 .LASF115
     /tmp/ccHEKJtt.s:3221   .debug_str:0000000000000c17 .LASF116
     /tmp/ccHEKJtt.s:3131   .debug_str:0000000000000917 .LASF117
     /tmp/ccHEKJtt.s:3029   .debug_str:000000000000068e .LASF118
     /tmp/ccHEKJtt.s:3227   .debug_str:0000000000000c49 .LASF119
     /tmp/ccHEKJtt.s:2999   .debug_str:000000000000059a .LASF120
     /tmp/ccHEKJtt.s:2967   .debug_str:0000000000000467 .LASF121
     /tmp/ccHEKJtt.s:3239   .debug_str:0000000000000cb5 .LASF122
     /tmp/ccHEKJtt.s:2963   .debug_str:0000000000000449 .LASF123
     /tmp/ccHEKJtt.s:3129   .debug_str:0000000000000910 .LASF124
     /tmp/ccHEKJtt.s:3103   .debug_str:000000000000086b .LASF125
     /tmp/ccHEKJtt.s:3105   .debug_str:000000000000087e .LASF126
     /tmp/ccHEKJtt.s:2875   .debug_str:00000000000001a0 .LASF127
     /tmp/ccHEKJtt.s:2903   .debug_str:000000000000025e .LASF128
     /tmp/ccHEKJtt.s:2951   .debug_str:00000000000003dd .LASF129
     /tmp/ccHEKJtt.s:2961   .debug_str:0000000000000443 .LASF130
     /tmp/ccHEKJtt.s:2895   .debug_str:000000000000021e .LASF131
     /tmp/ccHEKJtt.s:2831   .debug_str:000000000000003e .LASF132
     /tmp/ccHEKJtt.s:3095   .debug_str:0000000000000825 .LASF133
     /tmp/ccHEKJtt.s:3089   .debug_str:0000000000000802 .LASF134
     /tmp/ccHEKJtt.s:3229   .debug_str:0000000000000c5d .LASF135
     /tmp/ccHEKJtt.s:3205   .debug_str:0000000000000bbf .LASF136
     /tmp/ccHEKJtt.s:3223   .debug_str:0000000000000c1f .LASF137
     /tmp/ccHEKJtt.s:3199   .debug_str:0000000000000b8d .LASF138
     /tmp/ccHEKJtt.s:3013   .debug_str:00000000000005ff .LASF139
     /tmp/ccHEKJtt.s:3037   .debug_str:00000000000006a7 .LASF140
GAS LISTING /tmp/ccHEKJtt.s 			page 15


     /tmp/ccHEKJtt.s:3053   .debug_str:0000000000000709 .LASF141
     /tmp/ccHEKJtt.s:3211   .debug_str:0000000000000bea .LASF142
     /tmp/ccHEKJtt.s:2971   .debug_str:000000000000048d .LASF143
     /tmp/ccHEKJtt.s:3213   .debug_str:0000000000000bef .LASF144
     /tmp/ccHEKJtt.s:2861   .debug_str:000000000000013b .LASF145
     /tmp/ccHEKJtt.s:3215   .debug_str:0000000000000bf4 .LASF146
     /tmp/ccHEKJtt.s:3241   .debug_str:0000000000000cbd .LASF147
     /tmp/ccHEKJtt.s:3047   .debug_str:00000000000006de .LASF148
     /tmp/ccHEKJtt.s:3171   .debug_str:0000000000000ac9 .LASF149
     /tmp/ccHEKJtt.s:3181   .debug_str:0000000000000b19 .LASF150
     /tmp/ccHEKJtt.s:2941   .debug_str:0000000000000376 .LASF151
     /tmp/ccHEKJtt.s:3117   .debug_str:00000000000008bf .LASF152
     /tmp/ccHEKJtt.s:3003   .debug_str:00000000000005ae .LASF153
     /tmp/ccHEKJtt.s:3067   .debug_str:0000000000000771 .LASF155
     /tmp/ccHEKJtt.s:2909   .debug_str:0000000000000283 .LASF157
     /tmp/ccHEKJtt.s:3107   .debug_str:0000000000000885 .LASF158
     /tmp/ccHEKJtt.s:2849   .debug_str:00000000000000d3 .LASF159
     /tmp/ccHEKJtt.s:3207   .debug_str:0000000000000bc9 .LASF160
     /tmp/ccHEKJtt.s:3219   .debug_str:0000000000000bfe .LASF161
     /tmp/ccHEKJtt.s:3059   .debug_str:0000000000000739 .LASF162
     /tmp/ccHEKJtt.s:2933   .debug_str:0000000000000328 .LASF163
     /tmp/ccHEKJtt.s:3111   .debug_str:00000000000008a6 .LASF164
     /tmp/ccHEKJtt.s:2945   .debug_str:00000000000003a0 .LASF165
     /tmp/ccHEKJtt.s:3113   .debug_str:00000000000008b3 .LASF166
     /tmp/ccHEKJtt.s:2827   .debug_str:000000000000002d .LASF167
     /tmp/ccHEKJtt.s:2889   .debug_str:00000000000001ff .LASF168
     /tmp/ccHEKJtt.s:3061   .debug_str:0000000000000747 .LASF169
     /tmp/ccHEKJtt.s:3011   .debug_str:00000000000005f1 .LASF170
     /tmp/ccHEKJtt.s:2989   .debug_str:000000000000054b .LASF171
     /tmp/ccHEKJtt.s:3023   .debug_str:000000000000065a .LASF172
     /tmp/ccHEKJtt.s:2885   .debug_str:00000000000001e0 .LASF173
     /tmp/ccHEKJtt.s:2865   .debug_str:0000000000000161 .LASF174
     /tmp/ccHEKJtt.s:3145   .debug_str:0000000000000966 .LASF208
     /tmp/ccHEKJtt.s:3081   .debug_str:00000000000007da .LASF175
     /tmp/ccHEKJtt.s:3191   .debug_str:0000000000000b4d .LASF176
     /tmp/ccHEKJtt.s:3041   .debug_str:00000000000006b9 .LASF177
     /tmp/ccHEKJtt.s:3021   .debug_str:000000000000064a .LASF178
     /tmp/ccHEKJtt.s:3175   .debug_str:0000000000000ae4 .LASF179
     /tmp/ccHEKJtt.s:2973   .debug_str:000000000000049e .LASF180
     /tmp/ccHEKJtt.s:2851   .debug_str:00000000000000f0 .LASF181
     /tmp/ccHEKJtt.s:3025   .debug_str:0000000000000664 .LASF182
     /tmp/ccHEKJtt.s:3083   .debug_str:00000000000007e1 .LASF183
     /tmp/ccHEKJtt.s:2901   .debug_str:000000000000023e .LASF184
     /tmp/ccHEKJtt.s:3167   .debug_str:0000000000000a9c .LASF185
     /tmp/ccHEKJtt.s:2981   .debug_str:00000000000004fe .LASF186
     /tmp/ccHEKJtt.s:3233   .debug_str:0000000000000c7b .LASF187
     /tmp/ccHEKJtt.s:2857   .debug_str:000000000000010c .LASF188
     /tmp/ccHEKJtt.s:3123   .debug_str:00000000000008e5 .LASF189
     /tmp/ccHEKJtt.s:3007   .debug_str:00000000000005c6 .LASF190
     /tmp/ccHEKJtt.s:2925   .debug_str:0000000000000303 .LASF191
     /tmp/ccHEKJtt.s:10     .text:0000000000000000 .LFB37
     /tmp/ccHEKJtt.s:190    .text:0000000000000148 .LFE37
     /tmp/ccHEKJtt.s:2770   .debug_loc:0000000000000000 .LLST0
     /tmp/ccHEKJtt.s:2855   .debug_str:0000000000000101 .LASF192
     /tmp/ccHEKJtt.s:29     .text:0000000000000020 .LBB10
     /tmp/ccHEKJtt.s:41     .text:0000000000000024 .LBE10
     /tmp/ccHEKJtt.s:2777   .debug_loc:0000000000000023 .LLST1
GAS LISTING /tmp/ccHEKJtt.s 			page 16


     /tmp/ccHEKJtt.s:43     .text:0000000000000024 .LBB12
     /tmp/ccHEKJtt.s:55     .text:000000000000002c .LBE12
     /tmp/ccHEKJtt.s:2784   .debug_loc:0000000000000046 .LLST2
     /tmp/ccHEKJtt.s:123    .text:00000000000000e8 .LBB14
     /tmp/ccHEKJtt.s:135    .text:00000000000000f0 .LBE14
     /tmp/ccHEKJtt.s:2793   .debug_loc:000000000000006c .LLST3
     /tmp/ccHEKJtt.s:154    .text:0000000000000114 .LBB16
     /tmp/ccHEKJtt.s:162    .text:0000000000000118 .LBE16
     /tmp/ccHEKJtt.s:2801   .debug_loc:0000000000000090 .LLST4
     /tmp/ccHEKJtt.s:63     .text:0000000000000040 .LVL3
     /tmp/ccHEKJtt.s:72     .text:0000000000000058 .LVL4
     /tmp/ccHEKJtt.s:76     .text:0000000000000064 .LVL5
     /tmp/ccHEKJtt.s:82     .text:000000000000007c .LVL6
     /tmp/ccHEKJtt.s:89     .text:0000000000000090 .LVL7
     /tmp/ccHEKJtt.s:93     .text:000000000000009c .LVL8
     /tmp/ccHEKJtt.s:97     .text:00000000000000a4 .LVL9
     /tmp/ccHEKJtt.s:101    .text:00000000000000b0 .LVL10
     /tmp/ccHEKJtt.s:107    .text:00000000000000c8 .LVL11
     /tmp/ccHEKJtt.s:113    .text:00000000000000d4 .LVL13
     /tmp/ccHEKJtt.s:117    .text:00000000000000e0 .LVL14
     /tmp/ccHEKJtt.s:121    .text:00000000000000e8 .LVL15
     /tmp/ccHEKJtt.s:139    .text:00000000000000f8 .LVL17
     /tmp/ccHEKJtt.s:147    .text:0000000000000110 .LVL18
     /tmp/ccHEKJtt.s:168    .text:0000000000000124 .LVL21
     /tmp/ccHEKJtt.s:174    .text:0000000000000130 .LVL22
     /tmp/ccHEKJtt.s:3193   .debug_str:0000000000000b61 .LASF193
     /tmp/ccHEKJtt.s:2927   .debug_str:0000000000000308 .LASF194
     /tmp/ccHEKJtt.s:2923   .debug_str:00000000000002fe .LASF209
     /tmp/ccHEKJtt.s:3049   .debug_str:00000000000006e3 .LASF195
     /tmp/ccHEKJtt.s:3237   .debug_str:0000000000000ca7 .LASF197
     /tmp/ccHEKJtt.s:2937   .debug_str:000000000000035a .LASF196
     /tmp/ccHEKJtt.s:3039   .debug_str:00000000000006ac .LASF198
     /tmp/ccHEKJtt.s:2837   .debug_str:0000000000000080 .LASF199
     /tmp/ccHEKJtt.s:3079   .debug_str:00000000000007ca .LASF200
     /tmp/ccHEKJtt.s:109    .text:00000000000000cc .LVL12
     /tmp/ccHEKJtt.s:185    .text:0000000000000140 .LVL23
     /tmp/ccHEKJtt.s:28     .text:0000000000000020 .LVL0
     /tmp/ccHEKJtt.s:38     .text:0000000000000024 .LVL1
     /tmp/ccHEKJtt.s:52     .text:000000000000002c .LVL2
     /tmp/ccHEKJtt.s:132    .text:00000000000000f0 .LVL16
     /tmp/ccHEKJtt.s:153    .text:0000000000000114 .LVL19
     /tmp/ccHEKJtt.s:160    .text:0000000000000118 .LVL20
     /tmp/ccHEKJtt.s:201    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_ZN15MemoryAllocator8instanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler8idleBodyEPv
_ZN3TCB12createThreadEPFvPvES0_Pc
_ZN9Scheduler4idleE
_ZN9Scheduler19instanceOfSchedulerEv
_ZN9Scheduler3putEP3TCB
_Z11consolePutcPv
_ZN7console4initEv
GAS LISTING /tmp/ccHEKJtt.s 			page 17


_Z12changeToUserv
_Z8userMainv
_Z15thread_dispatchv
